version: '3'
services:
  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:${KIBANA_VERSION}
    restart: 'always'
    volumes:
      - ./bin/kibana/kibana${KIBANA_VERSION}/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ${LIB_VOLUMN}/kibana/log:/var/log/kibana
    ports:
      - ${KIBANA_PORT}:5601
    networks:
      - esnet
    logging:
      options:
        max-size: "1g"
        max-file: "5"

  # ES01
  es01:
    build:
      context: ./bin/elastic/elastic${ES_VERSION}
      dockerfile: Dockerfile
    image: elastic01:${ES_VERSION}
    restart: 'always'
    environment:
      - cluster.name=docker-cluster-7x
      - cluster.initial_master_nodes=es01,es02,es03
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - node.name=es01
      - discovery.seed_hosts=es02,es03
      - bootstrap.memory_lock=true
      - "ELASTIC_USERNAME=elastic"
      - "ELASTIC_PASSWORD=elastic"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${ES7x_DATA_VOLUMN}/esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    networks:
      - esnet

  # ES02
  es02:
    build:
      context: ./bin/elastic/elastic${ES_VERSION}
      dockerfile: Dockerfile
    image: elastic02:${ES_VERSION}
    restart: 'always'
    environment:
      - cluster.name=docker-cluster-7x
      - cluster.initial_master_nodes=es01,es02,es03
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - node.name=es02
      - discovery.seed_hosts=es01,es03
      - bootstrap.memory_lock=true
      - "ELASTIC_USERNAME=elastic"
      - "ELASTIC_PASSWORD=elastic"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${ES7x_DATA_VOLUMN}/esdata02:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT1}:9200
    networks:
      - esnet

  # ES03
  es03:
    build:
      context: ./bin/elastic/elastic${ES_VERSION}
      dockerfile: Dockerfile
    image: elastic03:${ES_VERSION}
    restart: 'always'
    environment:
      - cluster.name=docker-cluster-7x
      - cluster.initial_master_nodes=es01,es02,es03
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - node.name=es03
      - discovery.seed_hosts=es01,es02
      - bootstrap.memory_lock=true
      - "ELASTIC_USERNAME=elastic"
      - "ELASTIC_PASSWORD=elastic"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${ES7x_DATA_VOLUMN}/esdata03:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT2}:9200
    networks:
      - esnet

  # headPlugin
  headPlugin:
    image: 'mobz/elasticsearch-head:5'
    ports:
      - 9100:9100
    networks:
      - esnet

  # Elasticsearch HQ
  elasticsearchHq:
    image: elastichq/elasticsearch-hq
    restart: 'always'
    ports:
      - ${ES_HQ}:5000
    networks:
      - esnet

  # Log stash
#  logstash:
#    image: docker.elastic.co/logstash/logstash:${LOGSTASH_VERSION}
#    volumes:
#      - ./bin/logstash/logtash${LOGSTASH_VERSION}/logstash.conf/:/usr/share/logstash/pipeline/logstash.conf
#      - ./bin/logstash/logtash${LOGSTASH_VERSION}/logstash.yml/:/usr/share/logstash/config/logstash.yml
#    networks:
#      - esnet

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local

networks:
  esnet:
